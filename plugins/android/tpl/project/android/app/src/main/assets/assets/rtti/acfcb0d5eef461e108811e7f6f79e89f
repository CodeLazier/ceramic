<class path="ceramic.Entity" params="">
	<implements path="ceramic.Lazy"/>
	<implements path="ceramic.Events"/>
	<lazyData public="1" expr="true" line="50">
		<x path="Bool"/>
		<meta>
			<m n=":value"><e>true</e></m>
			<m n=":noCompletion"/>
		</meta>
	</lazyData>
	<data public="1" get="accessor" set="accessor">
		<d><d/></d>
		<meta><m n=":isVar"/></meta>
	</data>
	<get_data set="method" line="14">
		<f a=""><d><d/></d></f>
		<haxe_doc></haxe_doc>
	</get_data>
	<set_data get="inline" set="null" line="14">
		<f a="data_">
			<d><d/></d>
			<d><d/></d>
		</f>
		<haxe_doc></haxe_doc>
	</set_data>
	<id public="1" expr="null" line="16">
		<c path="String"/>
		<meta><m n=":value"><e>null</e></m></meta>
	</id>
	<destroyed public="1" expr="false" line="18">
		<x path="Bool"/>
		<meta><m n=":value"><e>false</e></m></meta>
	</destroyed>
	<__cbOnDestroy>
		<c path="Array"><f a=""><x path="Void"/></f></c>
		<meta><m n=":noCompletion"/></meta>
		<haxe_doc>destroy event</haxe_doc>
	</__cbOnDestroy>
	<__cbOnceDestroy>
		<c path="Array"><f a=""><x path="Void"/></f></c>
		<meta><m n=":noCompletion"/></meta>
		<haxe_doc>destroy event</haxe_doc>
	</__cbOnceDestroy>
	<__cbOnOwnerUnbindDestroy>
		<c path="Array"><f a=""><x path="Void"/></f></c>
		<meta><m n=":noCompletion"/></meta>
		<haxe_doc>destroy event</haxe_doc>
	</__cbOnOwnerUnbindDestroy>
	<__cbOnceOwnerUnbindDestroy>
		<c path="Array"><f a=""><x path="Void"/></f></c>
		<meta><m n=":noCompletion"/></meta>
		<haxe_doc>destroy event</haxe_doc>
	</__cbOnceOwnerUnbindDestroy>
	<emitDestroy set="method" line="22">
		<f a=""><x path="Void"/></f>
		<haxe_doc>destroy event</haxe_doc>
	</emitDestroy>
	<onDestroy public="1" set="method" line="22">
		<f a="?owner:handle">
			<c path="ceramic.Entity"/>
			<f a=""><x path="Void"/></f>
			<x path="Void"/>
		</f>
		<haxe_doc>destroy event</haxe_doc>
	</onDestroy>
	<onceDestroy public="1" set="method" line="22">
		<f a="?owner:handle">
			<c path="ceramic.Entity"/>
			<f a=""><x path="Void"/></f>
			<x path="Void"/>
		</f>
		<haxe_doc>destroy event</haxe_doc>
	</onceDestroy>
	<offDestroy public="1" set="method" line="22">
		<f a="?handle">
			<f a=""><x path="Void"/></f>
			<x path="Void"/>
		</f>
		<haxe_doc>destroy event</haxe_doc>
	</offDestroy>
	<listensDestroy public="1" get="inline" set="null" line="22">
		<f a=""><x path="Bool"/></f>
		<haxe_doc>Does it listen to destroy event</haxe_doc>
	</listensDestroy>
	<destroy public="1" set="method" line="26"><f a=""><x path="Void"/></f></destroy>
	<className public="1" set="method" line="44"><f a=""><c path="String"/></f></className>
	<toString set="method" line="53"><f a=""><c path="String"/></f></toString>
	<components public="1" set="accessor" expr="null" line="70">
		<x path="ceramic.ImmutableMap">
			<c path="String"/>
			<c path="ceramic.Component"/>
		</x>
		<meta>
			<m n=":value"><e>null</e></m>
			<m n="editable"/>
		</meta>
	</components>
	<set_components set="method" line="71"><f a="components">
	<x path="ceramic.ImmutableMap">
		<c path="String"/>
		<c path="ceramic.Component"/>
	</x>
	<x path="ceramic.ImmutableMap">
		<c path="String"/>
		<c path="ceramic.Component"/>
	</x>
</f></set_components>
	<_components expr="null" line="110">
		<x path="Map">
			<c path="String"/>
			<c path="ceramic.Component"/>
		</x>
		<meta><m n=":value"><e>null</e></m></meta>
	</_components>
	<component public="1" set="method" line="112"><f a="name:?component">
	<c path="String"/>
	<c path="ceramic.Component"/>
	<c path="ceramic.Component"/>
</f></component>
	<hasComponent public="1" set="method" line="141"><f a="name">
	<c path="String"/>
	<x path="Bool"/>
</f></hasComponent>
	<removeComponent public="1" set="method" line="147"><f a="name">
	<c path="String"/>
	<x path="Void"/>
</f></removeComponent>
	<new public="1" set="method" line="10">
		<f a=""><x path="Void"/></f>
		<meta><m n=":compilerGenerated"/></meta>
	</new>
	<meta>
		<m n=":build"><e>ceramic.macros.LazyMacro.build()</e></m>
		<m n=":autoBuild"><e>ceramic.macros.LazyMacro.build()</e></m>
		<m n=":build"><e>ceramic.macros.EventsMacro.build()</e></m>
		<m n=":autoBuild"><e>ceramic.macros.EventsMacro.build()</e></m>
		<m n="editable"/>
		<m n=":autoBuild"><e>ceramic.macros.EntityMacro.build()</e></m>
		<m n=":rtti"/>
	</meta>
</class>