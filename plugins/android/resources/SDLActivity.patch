diff --git android-project/app/src/main/java/org/libsdl/app/SDLActivity.java android-project/app/src/main/java/org/libsdl/app/SDLActivity.java
index 85d51541c..4172124b4 100644
--- android-project/app/src/main/java/org/libsdl/app/SDLActivity.java
+++ android-project/app/src/main/java/org/libsdl/app/SDLActivity.java
@@ -322,6 +322,12 @@ public class SDLActivity extends Activity implements View.OnSystemUiVisibilityCh
         return new String[0];
     }
 
+    //---:clay:start
+    protected void preWindowCreate() {
+        // Overrided in subclass
+    }
+    //---:clay:end
+
     public static void initialize() {
         // The static nature of the singleton and Android quirkyness force us to initialize everything here
         // Otherwise, when exiting the app and returning to it, these variables *keep* their pre exit values
@@ -442,6 +448,10 @@ public class SDLActivity extends Activity implements View.OnSystemUiVisibilityCh
             }
         }
 
+        //---:clay:start
+        preWindowCreate();
+        //---:clay:end
+
         // Set up JNI
         SDL.setupJNI();
 
@@ -956,6 +966,29 @@ public class SDLActivity extends Activity implements View.OnSystemUiVisibilityCh
                     InputMethodManager imm = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);
                     imm.hideSoftInputFromWindow(mTextEdit.getWindowToken(), 0);
 
+                    //---:clay:start
+                    // Explicit request fullscreen when keyboard is hidden
+                    new Handler(android.os.Looper.getMainLooper()).post(new Runnable() {
+                        @Override
+                        public void run() {
+
+                            Activity activity = (Activity)getContext();
+                            if (activity != null) {
+                                View decorView = activity.getWindow().getDecorView();
+
+                                decorView.setSystemUiVisibility(
+                                        View.SYSTEM_UI_FLAG_LAYOUT_STABLE
+                                                | View.SYSTEM_UI_FLAG_LOW_PROFILE
+                                                | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                                                | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
+                                                | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
+                                                | View.SYSTEM_UI_FLAG_FULLSCREEN
+                                                | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
+                            }
+                        }
+                    });
+                    //---:clay:end
+
                     mScreenKeyboardShown = false;
 
                     mSurface.requestFocus();
