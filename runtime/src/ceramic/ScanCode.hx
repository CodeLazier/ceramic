package ceramic;

#if (cpp && windows)
@:headerCode('
// Needed otherwise windows build fails :(
// But why?
#undef DELETE
#undef OUT
')
#end
/**
 * Keyboard scan codes representing physical key positions.
 * 
 * Scan codes represent the physical position of keys on the keyboard,
 * independent of the current keyboard layout or language settings.
 * This is different from KeyCode which represents the character/symbol
 * that would be generated by pressing the key.
 * 
 * For example, the physical key in the top-left letter position will
 * always have the same scan code (KEY_Q on QWERTY), regardless of
 * whether it produces 'Q', 'A' (on AZERTY), or another character.
 * 
 * Scan codes are useful for:
 * - Game controls where physical key position matters
 * - Keyboard shortcuts that should work across different layouts
 * - Low-level keyboard handling
 * 
 * Based on USB HID Usage Tables specification.
 * 
 * @see KeyCode
 * @see Key
 * @see Input
 */
enum abstract ScanCode(Int) from Int to Int {

    /**
     * Convert a scan code to its human-readable name.
     * 
     * @param scanCode The scan code to convert
     * @return The name of the key, or empty string if unknown
     */
    public static function name(scanCode:ScanCode):String {

        var res = null;

        if ((scanCode:Int) >= 0 && (scanCode:Int) < scanCodeNames.length) {
            res = scanCodeNames[scanCode];
        }

        return res != null ? res : "";

    }

    /**
     * Convert this scan code to a string representation.
     * @return A string in the format "ScanCode(value name)"
     */
    function toString():String {

        return 'ScanCode(' + this + ' ' + ScanCode.name(this) + ')';

    }

    /** Bit mask used to distinguish scan codes from key codes */
    public static var MASK:Int           = (1<<30);

    /** Unknown scan code */
    var UNKNOWN:ScanCode                 = 0;

    // Usage page 0x07
    // These values are from usage page 0x07 (USB keyboard page).
    
    // Letter keys (physical positions, not characters)

    /** Physical A key position */
    var KEY_A:ScanCode                   = 4;
    /** Physical B key position */
    var KEY_B:ScanCode                   = 5;
    /** Physical C key position */
    var KEY_C:ScanCode                   = 6;
    /** Physical D key position */
    var KEY_D:ScanCode                   = 7;
    /** Physical E key position */
    var KEY_E:ScanCode                   = 8;
    /** Physical F key position */
    var KEY_F:ScanCode                   = 9;
    /** Physical G key position */
    var KEY_G:ScanCode                   = 10;
    /** Physical H key position */
    var KEY_H:ScanCode                   = 11;
    /** Physical I key position */
    var KEY_I:ScanCode                   = 12;
    /** Physical J key position */
    var KEY_J:ScanCode                   = 13;
    /** Physical K key position */
    var KEY_K:ScanCode                   = 14;
    /** Physical L key position */
    var KEY_L:ScanCode                   = 15;
    /** Physical M key position */
    var KEY_M:ScanCode                   = 16;
    /** Physical N key position */
    var KEY_N:ScanCode                   = 17;
    /** Physical O key position */
    var KEY_O:ScanCode                   = 18;
    /** Physical P key position */
    var KEY_P:ScanCode                   = 19;
    /** Physical Q key position */
    var KEY_Q:ScanCode                   = 20;
    /** Physical R key position */
    var KEY_R:ScanCode                   = 21;
    /** Physical S key position */
    var KEY_S:ScanCode                   = 22;
    /** Physical T key position */
    var KEY_T:ScanCode                   = 23;
    /** Physical U key position */
    var KEY_U:ScanCode                   = 24;
    /** Physical V key position */
    var KEY_V:ScanCode                   = 25;
    /** Physical W key position */
    var KEY_W:ScanCode                   = 26;
    /** Physical X key position */
    var KEY_X:ScanCode                   = 27;
    /** Physical Y key position */
    var KEY_Y:ScanCode                   = 28;
    /** Physical Z key position */
    var KEY_Z:ScanCode                   = 29;

    /** Physical 1 key position */
    var KEY_1:ScanCode                   = 30;
    /** Physical 2 key position */
    var KEY_2:ScanCode                   = 31;
    /** Physical 3 key position */
    var KEY_3:ScanCode                   = 32;
    /** Physical 4 key position */
    var KEY_4:ScanCode                   = 33;
    /** Physical 5 key position */
    var KEY_5:ScanCode                   = 34;
    /** Physical 6 key position */
    var KEY_6:ScanCode                   = 35;
    /** Physical 7 key position */
    var KEY_7:ScanCode                   = 36;
    /** Physical 8 key position */
    var KEY_8:ScanCode                   = 37;
    /** Physical 9 key position */
    var KEY_9:ScanCode                   = 38;
    /** Physical 0 key position */
    var KEY_0:ScanCode                   = 39;

    /** Enter/Return key */
    var ENTER:ScanCode                   = 40;
    /** Escape key */
    var ESCAPE:ScanCode                  = 41;
    /** Backspace key */
    var BACKSPACE:ScanCode               = 42;
    /** Tab key */
    var TAB:ScanCode                     = 43;
    /** Space bar */
    var SPACE:ScanCode                   = 44;

    /** Minus/Underscore key position */
    var MINUS:ScanCode                   = 45;
    /** Equals/Plus key position */
    var EQUALS:ScanCode                  = 46;
    /** Left bracket key position */
    var LEFTBRACKET:ScanCode             = 47;
    /** Right bracket key position */
    var RIGHTBRACKET:ScanCode            = 48;

    /**
     * Backslash key position.
     * 
     * Located at the lower left of the return key on ISO keyboards
     * and at the right end of the QWERTY row on ANSI keyboards.
     * 
     * Produces different characters based on layout:
     * - US: Backslash (\) and Vertical Line (|)
     * - UK Windows: Number Sign (#) and Tilde (~)
     * - Swiss German: Dollar Sign ($) and Pound Sign (£)
     * - German: Number Sign (#) and Apostrophe (')
     * - French Mac: Grave Accent (`) and Pound Sign (£)
     * - French Windows: Asterisk (*) and Micro Sign (µ)
     */
    var BACKSLASH:ScanCode               = 49;

    /**
     * Non-US Hash key position.
     * 
     * ISO USB keyboards use this code instead of 49 for the same key,
     * but most OSes treat the two codes identically. As an implementor,
     * use BACKSLASH instead unless your keyboard generates both codes
     * and your OS treats them differently.
     */
    var NONUSHASH:ScanCode          = 50;
    /** Semicolon/Colon key position */
    var SEMICOLON:ScanCode          = 51;
    /** Apostrophe/Quote key position */
    var APOSTROPHE:ScanCode         = 52;

    /**
     * Grave/Tilde key position.
     * 
     * Located in the top left corner on both ANSI and ISO keyboards.
     * 
     * Produces different characters based on layout and keyboard type:
     * - US (ANSI): Grave Accent (`) and Tilde (~)
     * - UK Windows: Grave Accent (`) and Not Sign (¬)
     * - US/UK Mac (ISO): Section Sign (§) and Plus-Minus Sign (±)
     * - Swiss German (ISO): Section Sign (§) and Degree Sign (°)
     * - German (ISO): Circumflex Accent (^) and Degree Sign (°)
     * - French Windows: Superscript Two (²) and Tilde (~)
     * - French Mac (ISO): Commercial At (@) and Number Sign (#)
     * - Swiss/German/French Mac (ANSI): Less-Than (<) and Greater-Than (>)
     */
    var GRAVE:ScanCode              = 53;
    /** Comma/Less-Than key position */
    var COMMA:ScanCode              = 54;
    /** Period/Greater-Than key position */
    var PERIOD:ScanCode             = 55;
    /** Forward Slash/Question Mark key position */
    var SLASH:ScanCode              = 56;

    /** Caps Lock key */
    var CAPSLOCK:ScanCode           = 57;

    /** F1 function key */
    var F1:ScanCode                 = 58;
    /** F2 function key */
    var F2:ScanCode                 = 59;
    /** F3 function key */
    var F3:ScanCode                 = 60;
    /** F4 function key */
    var F4:ScanCode                 = 61;
    /** F5 function key */
    var F5:ScanCode                 = 62;
    /** F6 function key */
    var F6:ScanCode                 = 63;
    /** F7 function key */
    var F7:ScanCode                 = 64;
    /** F8 function key */
    var F8:ScanCode                 = 65;
    /** F9 function key */
    var F9:ScanCode                 = 66;
    /** F10 function key */
    var F10:ScanCode                = 67;
    /** F11 function key */
    var F11:ScanCode                = 68;
    /** F12 function key */
    var F12:ScanCode                = 69;

    /** Print Screen key */
    var PRINTSCREEN:ScanCode        = 70;
    /** Scroll Lock key */
    var SCROLLLOCK:ScanCode         = 71;
    /** Pause/Break key */
    var PAUSE:ScanCode              = 72;

    /** Insert key (PC) / Help key (some Mac keyboards) */
    var INSERT:ScanCode             = 73;
    /** Home key */
    var HOME:ScanCode               = 74;
    /** Page Up key */
    var PAGEUP:ScanCode             = 75;
    /** Delete key */
    var DELETE:ScanCode             = 76;
    /** End key */
    var END:ScanCode                = 77;
    /** Page Down key */
    var PAGEDOWN:ScanCode           = 78;
    /** Right arrow key */
    var RIGHT:ScanCode              = 79;
    /** Left arrow key */
    var LEFT:ScanCode               = 80;
    /** Down arrow key */
    var DOWN:ScanCode               = 81;
    /** Up arrow key */
    var UP:ScanCode                 = 82;

    /** Num Lock key (PC) / Clear key (Mac) */
    var NUMLOCKCLEAR:ScanCode       = 83;
    /** Keypad divide (/) */
    var KP_DIVIDE:ScanCode          = 84;
    /** Keypad multiply (*) */
    var KP_MULTIPLY:ScanCode        = 85;
    /** Keypad minus (-) */
    var KP_MINUS:ScanCode           = 86;
    /** Keypad plus (+) */
    var KP_PLUS:ScanCode            = 87;
    /** Keypad enter */
    var KP_ENTER:ScanCode           = 88;
    /** Keypad 1 */
    var KP_1:ScanCode               = 89;
    /** Keypad 2 */
    var KP_2:ScanCode               = 90;
    /** Keypad 3 */
    var KP_3:ScanCode               = 91;
    /** Keypad 4 */
    var KP_4:ScanCode               = 92;
    /** Keypad 5 */
    var KP_5:ScanCode               = 93;
    /** Keypad 6 */
    var KP_6:ScanCode               = 94;
    /** Keypad 7 */
    var KP_7:ScanCode               = 95;
    /** Keypad 8 */
    var KP_8:ScanCode               = 96;
    /** Keypad 9 */
    var KP_9:ScanCode               = 97;
    /** Keypad 0 */
    var KP_0:ScanCode               = 98;
    /** Keypad period (.) */
    var KP_PERIOD:ScanCode          = 99;


    /**
     * Non-US Backslash key position.
     * 
     * Additional key that ISO keyboards have over ANSI ones,
     * located between left shift and Y.
     * 
     * Produces different characters based on layout:
     * - US/UK Mac: Grave Accent (`) and Tilde (~)
     * - US/UK Windows: Backslash (\) and Vertical Line (|)
     * - Swiss German/German/French: Less-Than (<) and Greater-Than (>)
     */
    var NONUSBACKSLASH:ScanCode     = 100;

    /** Application/Context Menu/Compose key */
    var APPLICATION:ScanCode        = 101;

    /**
     * Power key.
     * 
     * USB spec says this is a status flag, not a physical key,
     * but some Mac keyboards do have a power key.
     */
    var POWER:ScanCode              = 102;
    /** Keypad equals (=) */
    var KP_EQUALS:ScanCode          = 103;
    /** F13 function key */
    var F13:ScanCode                = 104;
    /** F14 function key */
    var F14:ScanCode                = 105;
    /** F15 function key */
    var F15:ScanCode                = 106;
    /** F16 function key */
    var F16:ScanCode                = 107;
    /** F17 function key */
    var F17:ScanCode                = 108;
    /** F18 function key */
    var F18:ScanCode                = 109;
    /** F19 function key */
    var F19:ScanCode                = 110;
    /** F20 function key */
    var F20:ScanCode                = 111;
    /** F21 function key */
    var F21:ScanCode                = 112;
    /** F22 function key */
    var F22:ScanCode                = 113;
    /** F23 function key */
    var F23:ScanCode                = 114;
    /** F24 function key */
    var F24:ScanCode                = 115;
    /** Execute key */
    var EXECUTE:ScanCode            = 116;
    /** Help key */
    var HELP:ScanCode               = 117;
    /** Menu key */
    var MENU:ScanCode               = 118;
    /** Select key */
    var SELECT:ScanCode             = 119;
    /** Stop key */
    var STOP:ScanCode               = 120;

    /** Again/Redo key */
    var AGAIN:ScanCode              = 121;
    /** Undo key */
    var UNDO:ScanCode               = 122;
    /** Cut key */
    var CUT:ScanCode                = 123;
    /** Copy key */
    var COPY:ScanCode               = 124;
    /** Paste key */
    var PASTE:ScanCode              = 125;
    /** Find key */
    var FIND:ScanCode               = 126;
    /** Mute key */
    var MUTE:ScanCode               = 127;
    /** Volume Up key */
    var VOLUMEUP:ScanCode           = 128;
    /** Volume Down key */
    var VOLUMEDOWN:ScanCode         = 129;

    // not sure whether there's a reason to enable these
    //  var lockingcapslock = 130,
    //  var lockingnumlock = 131,
    //  var lockingscrolllock = 132,

    /** Keypad comma (,) */
    var KP_COMMA:ScanCode           = 133;
    /** Keypad equals on AS/400 keyboards */
    var KP_EQUALSAS400:ScanCode     = 134;

    /** International1 key (used on Asian keyboards) */
    var INTERNATIONAL1:ScanCode     = 135;
    /** International2 key (used on Asian keyboards) */
    var INTERNATIONAL2:ScanCode     = 136;
    /** International3 key (Yen) */
    var INTERNATIONAL3:ScanCode     = 137;
    /** International4 key */
    var INTERNATIONAL4:ScanCode     = 138;
    /** International5 key */
    var INTERNATIONAL5:ScanCode     = 139;
    /** International6 key */
    var INTERNATIONAL6:ScanCode     = 140;
    /** International7 key */
    var INTERNATIONAL7:ScanCode     = 141;
    /** International8 key */
    var INTERNATIONAL8:ScanCode     = 142;
    /** International9 key */
    var INTERNATIONAL9:ScanCode     = 143;
    /** Language 1 key (Hangul/English toggle) */
    var LANG1:ScanCode              = 144;
    /** Language 2 key (Hanja conversion) */
    var LANG2:ScanCode              = 145;
    /** Language 3 key (Katakana) */
    var LANG3:ScanCode              = 146;
    /** Language 4 key (Hiragana) */
    var LANG4:ScanCode              = 147;
    /** Language 5 key (Zenkaku/Hankaku) */
    var LANG5:ScanCode              = 148;
    /** Language 6 key (reserved) */
    var LANG6:ScanCode              = 149;
    /** Language 7 key (reserved) */
    var LANG7:ScanCode              = 150;
    /** Language 8 key (reserved) */
    var LANG8:ScanCode              = 151;
    /** Language 9 key (reserved) */
    var LANG9:ScanCode              = 152;
    /** Alt Erase key (Erase-Eaze) */
    var ALTERASE:ScanCode           = 153;
    /** SysReq/Attention key */
    var SYSREQ:ScanCode             = 154;
    /** Cancel key */
    var CANCEL:ScanCode             = 155;
    /** Clear key */
    var CLEAR:ScanCode              = 156;
    /** Prior key */
    var PRIOR:ScanCode              = 157;
    /** Secondary Return key */
    var RETURN2:ScanCode            = 158;
    /** Separator key */
    var SEPARATOR:ScanCode          = 159;
    /** Out key */
    var OUT:ScanCode                = 160;
    /** Oper key */
    var OPER:ScanCode               = 161;
    /** Clear/Again key */
    var CLEARAGAIN:ScanCode         = 162;
    /** CrSel/Props key */
    var CRSEL:ScanCode              = 163;
    /** ExSel key */
    var EXSEL:ScanCode              = 164;

    /** Keypad double zero (00) */
    var KP_00:ScanCode              = 176;
    /** Keypad triple zero (000) */
    var KP_000:ScanCode             = 177;
    /** Thousands separator key (typically comma or period depending on locale) */
    var THOUSANDSSEPARATOR:ScanCode = 178;
    /** Decimal separator key (typically period or comma depending on locale) */
    var DECIMALSEPARATOR:ScanCode   = 179;
    /** Currency unit key (primary currency symbol like $ or €) */
    var CURRENCYUNIT:ScanCode       = 180;
    /** Currency sub-unit key (secondary currency symbol like ¢) */
    var CURRENCYSUBUNIT:ScanCode    = 181;
    /** Keypad left parenthesis (() */
    var KP_LEFTPAREN:ScanCode       = 182;
    /** Keypad right parenthesis ()) */
    var KP_RIGHTPAREN:ScanCode      = 183;
    /** Keypad left brace ({) */
    var KP_LEFTBRACE:ScanCode       = 184;
    /** Keypad right brace (}) */
    var KP_RIGHTBRACE:ScanCode      = 185;
    /** Keypad tab key */
    var KP_TAB:ScanCode             = 186;
    /** Keypad backspace key */
    var KP_BACKSPACE:ScanCode       = 187;
    /** Keypad A key (for hexadecimal input) */
    var KP_A:ScanCode               = 188;
    /** Keypad B key (for hexadecimal input) */
    var KP_B:ScanCode               = 189;
    /** Keypad C key (for hexadecimal input) */
    var KP_C:ScanCode               = 190;
    /** Keypad D key (for hexadecimal input) */
    var KP_D:ScanCode               = 191;
    /** Keypad E key (for hexadecimal input) */
    var KP_E:ScanCode               = 192;
    /** Keypad F key (for hexadecimal input) */
    var KP_F:ScanCode               = 193;
    /** Keypad XOR (exclusive or) operator */
    var KP_XOR:ScanCode             = 194;
    /** Keypad power/exponent (^) operator */
    var KP_POWER:ScanCode           = 195;
    /** Keypad percent (%) operator */
    var KP_PERCENT:ScanCode         = 196;
    /** Keypad less-than (<) operator */
    var KP_LESS:ScanCode            = 197;
    /** Keypad greater-than (>) operator */
    var KP_GREATER:ScanCode         = 198;
    /** Keypad ampersand (&) operator */
    var KP_AMPERSAND:ScanCode       = 199;
    /** Keypad double ampersand (&&) logical AND operator */
    var KP_DBLAMPERSAND:ScanCode    = 200;
    /** Keypad vertical bar (|) operator */
    var KP_VERTICALBAR:ScanCode     = 201;
    /** Keypad double vertical bar (||) logical OR operator */
    var KP_DBLVERTICALBAR:ScanCode  = 202;
    /** Keypad colon (:) */
    var KP_COLON:ScanCode           = 203;
    /** Keypad hash (#) symbol */
    var KP_HASH:ScanCode            = 204;
    /** Keypad space key */
    var KP_SPACE:ScanCode           = 205;
    /** Keypad at (@) symbol */
    var KP_AT:ScanCode              = 206;
    /** Keypad exclamation mark (!) */
    var KP_EXCLAM:ScanCode          = 207;
    /** Keypad memory store function */
    var KP_MEMSTORE:ScanCode        = 208;
    /** Keypad memory recall function */
    var KP_MEMRECALL:ScanCode       = 209;
    /** Keypad memory clear function */
    var KP_MEMCLEAR:ScanCode        = 210;
    /** Keypad memory add (M+) function */
    var KP_MEMADD:ScanCode          = 211;
    /** Keypad memory subtract (M-) function */
    var KP_MEMSUBTRACT:ScanCode     = 212;
    /** Keypad memory multiply (M*) function */
    var KP_MEMMULTIPLY:ScanCode     = 213;
    /** Keypad memory divide (M/) function */
    var KP_MEMDIVIDE:ScanCode       = 214;
    /** Keypad plus/minus (+/-) toggle key */
    var KP_PLUSMINUS:ScanCode       = 215;
    /** Keypad clear key */
    var KP_CLEAR:ScanCode           = 216;
    /** Keypad clear entry key */
    var KP_CLEARENTRY:ScanCode      = 217;
    /** Keypad binary mode key */
    var KP_BINARY:ScanCode          = 218;
    /** Keypad octal mode key */
    var KP_OCTAL:ScanCode           = 219;
    /** Keypad decimal mode key */
    var KP_DECIMAL:ScanCode         = 220;
    /** Keypad hexadecimal mode key */
    var KP_HEXADECIMAL:ScanCode     = 221;

    /** Left Control key */
    var LCTRL:ScanCode              = 224;
    /** Left Shift key */
    var LSHIFT:ScanCode             = 225;
    /** Left Alt key (Option on Mac) */
    var LALT:ScanCode               = 226;
    /** Left Meta key (Windows/Command/Super) */
    var LMETA:ScanCode              = 227;
    /** Right Control key */
    var RCTRL:ScanCode              = 228;
    /** Right Shift key */
    var RSHIFT:ScanCode             = 229;
    /** Right Alt key (Alt Gr/Option) */
    var RALT:ScanCode               = 230;
    /** Right Meta key (Windows/Command/Super) */
    var RMETA:ScanCode              = 231;

    /**
     * Mode key.
     * 
     * Not sure if this is really not covered by any of the above,
     * but since there's a special modifier for it, it's included here.
     */
    var MODE:ScanCode               = 257;

    //
    // Usage page 0x0C
    // These values are mapped from usage page 0x0C (USB consumer page).
    
    // Media and application control keys

    /** Audio Next Track key */
    var AUDIONEXT:ScanCode          = 258;
    /** Audio Previous Track key */
    var AUDIOPREV:ScanCode          = 259;
    /** Audio Stop key */
    var AUDIOSTOP:ScanCode          = 260;
    /** Audio Play key */
    var AUDIOPLAY:ScanCode          = 261;
    /** Audio Mute key */
    var AUDIOMUTE:ScanCode          = 262;
    /** Media Select key */
    var MEDIASELECT:ScanCode        = 263;
    /** WWW/Internet key */
    var WWW:ScanCode                = 264;
    /** Mail key */
    var MAIL:ScanCode               = 265;
    /** Calculator key */
    var CALCULATOR:ScanCode         = 266;
    /** Computer/My Computer key */
    var COMPUTER:ScanCode           = 267;
    /** AC Search key */
    var AC_SEARCH:ScanCode          = 268;
    /** AC Home key */
    var AC_HOME:ScanCode            = 269;
    /** AC Back key */
    var AC_BACK:ScanCode            = 270;
    /** AC Forward key */
    var AC_FORWARD:ScanCode         = 271;
    /** AC Stop key */
    var AC_STOP:ScanCode            = 272;
    /** AC Refresh key */
    var AC_REFRESH:ScanCode         = 273;
    /** AC Bookmarks key */
    var AC_BOOKMARKS:ScanCode       = 274;

    // Walther keys
    // These are values that Christian Walther added (for mac keyboard?).

    /** Brightness Down key */
    var BRIGHTNESSDOWN:ScanCode     = 275;
    /** Brightness Up key */
    var BRIGHTNESSUP:ScanCode       = 276;
    /** Display Switch key (display mirroring/dual display/video mode) */
    var DISPLAYSWITCH:ScanCode      = 277;
    /** Keyboard Illumination Toggle key */
    var KBDILLUMTOGGLE:ScanCode     = 278;
    /** Keyboard Illumination Down key */
    var KBDILLUMDOWN:ScanCode       = 279;
    /** Keyboard Illumination Up key */
    var KBDILLUMUP:ScanCode         = 280;
    /** Eject key */
    var EJECT:ScanCode              = 281;
    /** Sleep key */
    var SLEEP:ScanCode              = 282;
    /** App1 key */
    var APP1:ScanCode               = 283;
    /** App2 key */
    var APP2:ScanCode               = 284;

    /**
     * Human-readable names for scan codes.
     * Used by the name() function to convert scan codes to strings.
     */
    static var scanCodeNames:Array<String> = [
        null, null, null, null,
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G",
        "H",
        "I",
        "J",
        "K",
        "L",
        "M",
        "N",
        "O",
        "P",
        "Q",
        "R",
        "S",
        "T",
        "U",
        "V",
        "W",
        "X",
        "Y",
        "Z",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "0",
        "Enter",
        "Escape",
        "Backspace",
        "Tab",
        "Space",
        "-",
        "=",
        "[",
        "]",
        "\\",
        "#",
        ";",
        "'",
        "`",
        ",",
        ".",
        "/",
        "CapsLock",
        "F1",
        "F2",
        "F3",
        "F4",
        "F5",
        "F6",
        "F7",
        "F8",
        "F9",
        "F10",
        "F11",
        "F12",
        "PrintScreen",
        "ScrollLock",
        "Pause",
        "Insert",
        "Home",
        "PageUp",
        "Delete",
        "End",
        "PageDown",
        "Right",
        "Left",
        "Down",
        "Up",
        "Numlock",
        "Keypad /",
        "Keypad *",
        "Keypad -",
        "Keypad +",
        "Keypad Enter",
        "Keypad 1",
        "Keypad 2",
        "Keypad 3",
        "Keypad 4",
        "Keypad 5",
        "Keypad 6",
        "Keypad 7",
        "Keypad 8",
        "Keypad 9",
        "Keypad 0",
        "Keypad .",
        null,
        "Application",
        "Power",
        "Keypad =",
        "F13",
        "F14",
        "F15",
        "F16",
        "F17",
        "F18",
        "F19",
        "F20",
        "F21",
        "F22",
        "F23",
        "F24",
        "Execute",
        "Help",
        "Menu",
        "Select",
        "Stop",
        "Again",
        "Undo",
        "Cut",
        "Copy",
        "Paste",
        "Find",
        "Mute",
        "VolumeUp",
        "VolumeDown",
        null, null, null,
        "Keypad ,",
        "Keypad = (AS400)",
        null, null, null, null, null, null, null, null, null, null, null, null,
        null, null, null, null, null, null,
        "AltErase",
        "SysReq",
        "Cancel",
        "Clear",
        "Prior",
        "Enter",
        "Separator",
        "Out",
        "Oper",
        "Clear / Again",
        "CrSel",
        "ExSel",
        null, null, null, null, null, null, null, null, null, null, null,
        "Keypad 00",
        "Keypad 000",
        "ThousandsSeparator",
        "DecimalSeparator",
        "CurrencyUnit",
        "CurrencySubUnit",
        "Keypad (",
        "Keypad )",
        "Keypad {",
        "Keypad }",
        "Keypad Tab",
        "Keypad Backspace",
        "Keypad A",
        "Keypad B",
        "Keypad C",
        "Keypad D",
        "Keypad E",
        "Keypad F",
        "Keypad XOR",
        "Keypad ^",
        "Keypad %",
        "Keypad <",
        "Keypad >",
        "Keypad &",
        "Keypad &&",
        "Keypad |",
        "Keypad ||",
        "Keypad :",
        "Keypad #",
        "Keypad Space",
        "Keypad @",
        "Keypad !",
        "Keypad MemStore",
        "Keypad MemRecall",
        "Keypad MemClear",
        "Keypad MemAdd",
        "Keypad MemSubtract",
        "Keypad MemMultiply",
        "Keypad MemDivide",
        "Keypad +/-",
        "Keypad Clear",
        "Keypad ClearEntry",
        "Keypad Binary",
        "Keypad Octal",
        "Keypad Decimal",
        "Keypad Hexadecimal",
        null, null,
        "Left Ctrl",
        "Left Shift",
        "Left Alt",
        "Left Meta",
        "Right Ctrl",
        "Right Shift",
        "Right Alt",
        "Right Meta",
        null, null, null, null, null, null, null, null, null, null, null, null,
        null, null, null, null, null, null, null, null, null, null, null, null,
        null,
        "ModeSwitch",
        "AudioNext",
        "AudioPrev",
        "AudioStop",
        "AudioPlay",
        "AudioMute",
        "MediaSelect",
        "WWW",
        "Mail",
        "Calculator",
        "Computer",
        "AC Search",
        "AC Home",
        "AC Back",
        "AC Forward",
        "AC Stop",
        "AC Refresh",
        "AC Bookmarks",
        "BrightnessDown",
        "BrightnessUp",
        "DisplaySwitch",
        "KBDIllumToggle",
        "KBDIllumDown",
        "KBDIllumUp",
        "Eject",
        "Sleep",
    ];

}